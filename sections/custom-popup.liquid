{{ "custom-popup.min.css" | asset_url | stylesheet_tag }}

{% if section.settings.enable_popup %}
    <div class="custom-popup">
        <div class="custom-popup__bg"></div>
        <div class="custom-popup__wrapper">
            <div class="custom-popup__close">
                {% render 'icon-close' %}
            </div>
            {% if section.settings.image %}
                <img class="custom-popup__image" src="{{ section.settings.image | img_url: '600x' }}" alt="{{ section.settings.image.alt }}">
            {% endif %}
            <div class="custom-popup__content">
                <div class="custom-popup__subheading">{{ section.settings.subheading | escape }}</div>
                <h2 class="custom-popup__heading">{{ section.settings.title | escape }}</h2>
                <ul class="custom-popup__product-list">
                    {%- for block in section.blocks -%}
                        {%- case block.type -%}
                            {%- when 'product' -%}
                                {% assign product_item = block.settings.product_item %}
                                <li class="custom-popup__product-item" {{ block.shopify_attributes }}
                                    data-variant="{{ product_item.selected_or_first_available_variant.id }}">
                                    <img class="image" src="{{ product_item.featured_image | img_url: '200x' }}" alt="{{ product_item.title }}">
                                    <div class="content">
                                        <div class="sku"><span>SKU:</span><span>{{ product_item.selected_or_first_available_variant.sku }}</span></div>
                                        <a class="title" href="{{ product_item.url }}">{{ product_item.title }}</a>
                                        {% if product_item.compare_at_price > product_item.price %}
                                            <div class="price">
                                                <p class="discounted-price">{{ product_item.price | money }}</p>
                                                <p class="original-price"><s>{{ product_item.compare_at_price | money }}</s></p>
                                            </div>
                                        {% else %}
                                            <p class="price">{{ product_item.price | money }}</p>
                                        {% endif %}
                                    </div>
                                </li>
                        {% endcase %}
                    {% endfor %}
                </ul>

                <form class="custom-popup__form" method="post" action="/cart/add" accept-charset="UTF-8" enctype="multipart/form-data" novalidate="novalidate">
                    <button type="submit" class="button button--full-width button--primary">
                        <span>Add Both to Cart</span>
                        {% render 'icon-cart' %}
                        <div class="loading-overlay__spinner hidden">
                            <svg aria-hidden="true" focusable="false" class="spinner" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
                                <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                            </svg>
                        </div>
                    </button>
                    <div class="custom-popup__success-message">

                    </div>
                </form>
            </div>
        </div>
    </div>
{% endif %}

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // a script that will allow you to display the Pop-up only once for each site visitor.
        let oncePerCustomer = "{{ section.settings.once_per_customer }}";
        let showDelay = Number("{{ section.settings.show_delay }}" * 1000);
        let popup = document.querySelector('.custom-popup');
        let popupClose = document.querySelector('.custom-popup__close');
        let popupBG = document.querySelector('.custom-popup__bg');

        // Check if the popup has been displayed before
        if (oncePerCustomer === "true") {
            if (!localStorage.getItem('popupDisplayed')) {
                setTimeout(() => {
                    popup.classList.add('active')
                }, showDelay)
                localStorage.setItem('popupDisplayed', 'true');
            }
        } else {
            setTimeout(() => {
                popup.classList.add('active')
            }, showDelay)
        }

        // Add event listener to close via close button
        popupClose.addEventListener('click', function () {
            popup.classList.remove('active');

            if (oncePerCustomer === "true" && !localStorage.getItem('popupDisplayed')) {
                localStorage.setItem('popupDisplayed', 'true');
            }
        });

        // Add event listener to close via bg layout
        popupBG.addEventListener('click', function () {
            popup.classList.remove('active');

            if (oncePerCustomer === "true" && !localStorage.getItem('popupDisplayed')) {
                localStorage.setItem('popupDisplayed', 'true');
            }
        });

        //add to cart script
        document.querySelector(".custom-popup__form")?.addEventListener("submit", async (e) => {
            e.preventDefault();
            let products = document.querySelectorAll('.custom-popup__product-item');
            let formSubmit = document.querySelector('.custom-popup__form button[type="submit"]');
            let successMessage = document.querySelector('.custom-popup__success-message');
            let formData = {
                'items': [{
                    'id': products[0].dataset.variant,
                    'quantity': 1
                }, {
                    'id': products[1].dataset.variant,
                    'quantity': 1
                }]
            };

            // Show loading spinner
            const loadingOverlay = formSubmit.querySelector(".loading-overlay__spinner");
            loadingOverlay.classList.remove("hidden");

            // Add products to cart
            await fetch(`${window.Shopify.routes.root}cart/add.js`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(formData),
            });

            // Get updated cart data
            const res = await fetch("/cart.json");
            const cart = await res.json()
                .then(() => {
                    loadingOverlay.classList.add("hidden");
                    formSubmit.classList.add("added");
                    successMessage.innerText = 'Two products successfully added!'
                })
            console.log(cart)
        });
    });
</script>

{% schema %}
{
  "name": "Custom popup",
  "tag": "section",
  "class": "custom-popup-section",
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "limit": 2,
      "settings": [
        {
          "type": "product",
          "id": "product_item",
          "label": "Products to show in popup"
        }
      ]
    }
  ],
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_popup",
      "label": "Enable popup",
      "info": "Check box if you want to show the popup",
      "default": false
    },
    {
      "type": "image_picker",
      "id": "image",
      "label": "Popup main image"
    },
    {
      "type": "textarea",
      "id": "subheading",
      "label": "Popup subheading",
      "default": "<h2>For Business or Ceremony</h2>"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Popup heading",
      "default": "For Business or Ceremony"
    },
    {
      "type": "range",
      "id": "show_delay",
      "min": 1,
      "max": 10,
      "step": 0.5,
      "unit": "s",
      "label": "Delay before appearance (in seconds).",
      "default": 1
    },
    {
      "type": "checkbox",
      "id": "once_per_customer",
      "label": "Show only once per customer",
      "info": "An option that will allow you to display the Pop-up only once for each site visitor.",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "t:sections.custom-liquid.presets.name"
    }
  ]
}
{% endschema %}